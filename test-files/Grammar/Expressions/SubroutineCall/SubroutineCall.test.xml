<class>
	<keyword> class </keyword>
	<identifier> Main </identifier>
	<symbol> { </symbol>
	<subroutineDec>
		<keyword> function </keyword>
		<keyword> void </keyword>
		<identifier> main </identifier>
		<symbol> ( </symbol>
		<parameterList>
		</parameterList>
		<symbol> ) </symbol>
		<subroutineBody>
			<symbol> { </symbol>
			<statements>
				<letStatement>
					<keyword> let </keyword>
					<identifier> expressionList1 </identifier>
					<symbol> = </symbol>
					<expression>
						<term>
							<identifier> abc </identifier>
							<symbol> ( </symbol>
							<expressionList>
							</expressionList>
							<symbol> ) </symbol>
						</term>
					</expression>
					<symbol> ; </symbol>
				</letStatement>
				<letStatement>
					<keyword> let </keyword>
					<identifier> expressionList2 </identifier>
					<symbol> = </symbol>
					<expression>
						<term>
							<identifier> acb </identifier>
							<symbol> . </symbol>
							<identifier> def </identifier>
							<symbol> ( </symbol>
							<expressionList>
							</expressionList>
							<symbol> ) </symbol>
						</term>
					</expression>
					<symbol> ; </symbol>
				</letStatement>
				<letStatement>
					<keyword> let </keyword>
					<identifier> expressionList3 </identifier>
					<symbol> = </symbol>
					<expression>
						<term>
							<identifier> abc </identifier>
							<symbol> ( </symbol>
							<expressionList>
								<expression>
									<term>
										<identifier> a </identifier>
									</term>
									<symbol> + </symbol>
									<term>
										<identifier> b </identifier>
									</term>
								</expression>
								<symbol> , </symbol>
								<expression>
									<term>
										<symbol> - </symbol>
										<term>
											<identifier> c </identifier>
										</term>
									</term>
								</expression>
							</expressionList>
							<symbol> ) </symbol>
						</term>
					</expression>
					<symbol> ; </symbol>
				</letStatement>
				<letStatement>
					<keyword> let </keyword>
					<identifier> expressionList4 </identifier>
					<symbol> = </symbol>
					<expression>
						<term>
							<identifier> acb </identifier>
							<symbol> . </symbol>
							<identifier> def </identifier>
							<symbol> ( </symbol>
							<expressionList>
								<expression>
									<term>
										<identifier> a </identifier>
									</term>
								</expression>
								<symbol> , </symbol>
								<expression>
									<term>
										<identifier> b </identifier>
									</term>
								</expression>
								<symbol> , </symbol>
								<expression>
									<term>
										<identifier> c </identifier>
									</term>
								</expression>
								<symbol> , </symbol>
								<expression>
									<term>
										<identifier> d </identifier>
									</term>
								</expression>
							</expressionList>
							<symbol> ) </symbol>
						</term>
					</expression>
					<symbol> ; </symbol>
				</letStatement>
			</statements>
			<symbol> } </symbol>
		</subroutineBody>
	</subroutineDec>
	<symbol> } </symbol>
</class>
